package protocol;
// Generated by proto2javame, Wed Jan 13 00:12:47 CST 2016.

import java.io.IOException;
import java.io.InputStream;


import net.jarlehansen.protobuf.javame.input.InputReader;
import net.jarlehansen.protobuf.javame.input.DelimitedInputStream;
import net.jarlehansen.protobuf.javame.input.DelimitedSizeUtil;
import net.jarlehansen.protobuf.javame.ComputeSizeUtil;
import net.jarlehansen.protobuf.javame.output.OutputWriter;
import net.jarlehansen.protobuf.javame.AbstractOutputWriter;
import net.jarlehansen.protobuf.javame.input.taghandler.UnknownTagHandler;
import net.jarlehansen.protobuf.javame.input.taghandler.DefaultUnknownTagHandlerImpl;

public final class all_seq_info extends AbstractOutputWriter {
	private static UnknownTagHandler unknownTagHandler = DefaultUnknownTagHandlerImpl.newInstance();

	private final int seat_index;
	private static final int fieldNumberSeat_index = 1;
	private final boolean hasSeat_index;

	private final java.util.Vector wan_gang_mt;
	private static final int fieldNumberWan_gang_mt = 2;

	private final java.util.Vector zhi_gang_mt;
	private static final int fieldNumberZhi_gang_mt = 3;

	private final java.util.Vector an_gang_mt;
	private static final int fieldNumberAn_gang_mt = 4;

	private final java.util.Vector hu_mt;
	private static final int fieldNumberHu_mt = 5;

	private final java.util.Vector hua_zhu_mt;
	private static final int fieldNumberHua_zhu_mt = 6;

	private final java.util.Vector da_jiao_mt;
	private static final int fieldNumberDa_jiao_mt = 7;

	private final st_hu_desc da_jiao_desc;
	private static final int fieldNumberDa_jiao_desc = 8;
	private final boolean hasDa_jiao_desc;

	private final java.util.Vector hu_desc;
	private static final int fieldNumberHu_desc = 9;

	private final st_hand_seq hand_seq;
	private static final int fieldNumberHand_seq = 10;
	private final boolean hasHand_seq;

	private final java.util.Vector hu_seq;
	private static final int fieldNumberHu_seq = 11;

	private final java.util.Vector complex_seq;
	private static final int fieldNumberComplex_seq = 12;

	private final int vip_change;
	private static final int fieldNumberVip_change = 13;
	private final boolean hasVip_change;

	private final long total_gold;
	private static final int fieldNumberTotal_gold = 14;
	private final boolean hasTotal_gold;

	private final long money_change;
	private static final int fieldNumberMoney_change = 15;
	private final boolean hasMoney_change;


	public static Builder newBuilder() {
		return new Builder();
	}

	private all_seq_info(final Builder builder) {
			this.seat_index = builder.seat_index;
			this.hasSeat_index = builder.hasSeat_index;
			this.wan_gang_mt = builder.wan_gang_mt;
			this.zhi_gang_mt = builder.zhi_gang_mt;
			this.an_gang_mt = builder.an_gang_mt;
			this.hu_mt = builder.hu_mt;
			this.hua_zhu_mt = builder.hua_zhu_mt;
			this.da_jiao_mt = builder.da_jiao_mt;
			this.da_jiao_desc = builder.da_jiao_desc;
			this.hasDa_jiao_desc = builder.hasDa_jiao_desc;
			this.hu_desc = builder.hu_desc;
			this.hand_seq = builder.hand_seq;
			this.hasHand_seq = builder.hasHand_seq;
			this.hu_seq = builder.hu_seq;
			this.complex_seq = builder.complex_seq;
			this.vip_change = builder.vip_change;
			this.hasVip_change = builder.hasVip_change;
			this.total_gold = builder.total_gold;
			this.hasTotal_gold = builder.hasTotal_gold;
			this.money_change = builder.money_change;
			this.hasMoney_change = builder.hasMoney_change;
			}

	public static class Builder {
		private int seat_index;
		private boolean hasSeat_index = false;

		private java.util.Vector wan_gang_mt = new java.util.Vector();
		private boolean hasWan_gang_mt = false;

		private java.util.Vector zhi_gang_mt = new java.util.Vector();
		private boolean hasZhi_gang_mt = false;

		private java.util.Vector an_gang_mt = new java.util.Vector();
		private boolean hasAn_gang_mt = false;

		private java.util.Vector hu_mt = new java.util.Vector();
		private boolean hasHu_mt = false;

		private java.util.Vector hua_zhu_mt = new java.util.Vector();
		private boolean hasHua_zhu_mt = false;

		private java.util.Vector da_jiao_mt = new java.util.Vector();
		private boolean hasDa_jiao_mt = false;

		private st_hu_desc da_jiao_desc;
		private boolean hasDa_jiao_desc = false;

		private java.util.Vector hu_desc = new java.util.Vector();
		private boolean hasHu_desc = false;

		private st_hand_seq hand_seq;
		private boolean hasHand_seq = false;

		private java.util.Vector hu_seq = new java.util.Vector();
		private boolean hasHu_seq = false;

		private java.util.Vector complex_seq = new java.util.Vector();
		private boolean hasComplex_seq = false;

		private int vip_change;
		private boolean hasVip_change = false;

		private long total_gold;
		private boolean hasTotal_gold = false;

		private long money_change;
		private boolean hasMoney_change = false;


		private Builder() {
		}

		public Builder setSeat_index(final int seat_index) {
			this.seat_index = seat_index;
			this.hasSeat_index = true;
			return this;
		}

		public Builder setWan_gang_mt(final java.util.Vector wan_gang_mt) {
			if(!hasWan_gang_mt) {
				hasWan_gang_mt = true;
			}
			this.wan_gang_mt = wan_gang_mt;
			return this;
		}


		public Builder addElementWan_gang_mt(final st_money_transfer element) {
			if(!hasWan_gang_mt) {
				hasWan_gang_mt = true;
			}
			wan_gang_mt.addElement(element);
			return this;
		}

		public Builder setZhi_gang_mt(final java.util.Vector zhi_gang_mt) {
			if(!hasZhi_gang_mt) {
				hasZhi_gang_mt = true;
			}
			this.zhi_gang_mt = zhi_gang_mt;
			return this;
		}


		public Builder addElementZhi_gang_mt(final st_money_transfer element) {
			if(!hasZhi_gang_mt) {
				hasZhi_gang_mt = true;
			}
			zhi_gang_mt.addElement(element);
			return this;
		}

		public Builder setAn_gang_mt(final java.util.Vector an_gang_mt) {
			if(!hasAn_gang_mt) {
				hasAn_gang_mt = true;
			}
			this.an_gang_mt = an_gang_mt;
			return this;
		}


		public Builder addElementAn_gang_mt(final st_money_transfer element) {
			if(!hasAn_gang_mt) {
				hasAn_gang_mt = true;
			}
			an_gang_mt.addElement(element);
			return this;
		}

		public Builder setHu_mt(final java.util.Vector hu_mt) {
			if(!hasHu_mt) {
				hasHu_mt = true;
			}
			this.hu_mt = hu_mt;
			return this;
		}


		public Builder addElementHu_mt(final st_money_transfer element) {
			if(!hasHu_mt) {
				hasHu_mt = true;
			}
			hu_mt.addElement(element);
			return this;
		}

		public Builder setHua_zhu_mt(final java.util.Vector hua_zhu_mt) {
			if(!hasHua_zhu_mt) {
				hasHua_zhu_mt = true;
			}
			this.hua_zhu_mt = hua_zhu_mt;
			return this;
		}


		public Builder addElementHua_zhu_mt(final st_money_transfer element) {
			if(!hasHua_zhu_mt) {
				hasHua_zhu_mt = true;
			}
			hua_zhu_mt.addElement(element);
			return this;
		}

		public Builder setDa_jiao_mt(final java.util.Vector da_jiao_mt) {
			if(!hasDa_jiao_mt) {
				hasDa_jiao_mt = true;
			}
			this.da_jiao_mt = da_jiao_mt;
			return this;
		}


		public Builder addElementDa_jiao_mt(final st_money_transfer element) {
			if(!hasDa_jiao_mt) {
				hasDa_jiao_mt = true;
			}
			da_jiao_mt.addElement(element);
			return this;
		}

		public Builder setDa_jiao_desc(final st_hu_desc da_jiao_desc) {
			this.da_jiao_desc = da_jiao_desc;
			this.hasDa_jiao_desc = true;
			return this;
		}

		public Builder setHu_desc(final java.util.Vector hu_desc) {
			if(!hasHu_desc) {
				hasHu_desc = true;
			}
			this.hu_desc = hu_desc;
			return this;
		}


		public Builder addElementHu_desc(final st_hu_desc element) {
			if(!hasHu_desc) {
				hasHu_desc = true;
			}
			hu_desc.addElement(element);
			return this;
		}

		public Builder setHand_seq(final st_hand_seq hand_seq) {
			this.hand_seq = hand_seq;
			this.hasHand_seq = true;
			return this;
		}

		public Builder setHu_seq(final java.util.Vector hu_seq) {
			if(!hasHu_seq) {
				hasHu_seq = true;
			}
			this.hu_seq = hu_seq;
			return this;
		}


		public Builder addElementHu_seq(final int element) {
			if(!hasHu_seq) {
				hasHu_seq = true;
			}
			hu_seq.addElement(new Integer(element));
			return this;
		}

		public Builder setComplex_seq(final java.util.Vector complex_seq) {
			if(!hasComplex_seq) {
				hasComplex_seq = true;
			}
			this.complex_seq = complex_seq;
			return this;
		}


		public Builder addElementComplex_seq(final sccomplex_tile element) {
			if(!hasComplex_seq) {
				hasComplex_seq = true;
			}
			complex_seq.addElement(element);
			return this;
		}

		public Builder setVip_change(final int vip_change) {
			this.vip_change = vip_change;
			this.hasVip_change = true;
			return this;
		}

		public Builder setTotal_gold(final long total_gold) {
			this.total_gold = total_gold;
			this.hasTotal_gold = true;
			return this;
		}

		public Builder setMoney_change(final long money_change) {
			this.money_change = money_change;
			this.hasMoney_change = true;
			return this;
		}

		public all_seq_info build() {
			return new all_seq_info(this);
		}
	}

	public int getSeat_index() {
		return seat_index;
	}

	public boolean hasSeat_index() {
		return hasSeat_index;
	}

	public java.util.Vector getWan_gang_mt() {
		return wan_gang_mt;
	}

	public java.util.Vector getZhi_gang_mt() {
		return zhi_gang_mt;
	}

	public java.util.Vector getAn_gang_mt() {
		return an_gang_mt;
	}

	public java.util.Vector getHu_mt() {
		return hu_mt;
	}

	public java.util.Vector getHua_zhu_mt() {
		return hua_zhu_mt;
	}

	public java.util.Vector getDa_jiao_mt() {
		return da_jiao_mt;
	}

	public st_hu_desc getDa_jiao_desc() {
		return da_jiao_desc;
	}

	public boolean hasDa_jiao_desc() {
		return hasDa_jiao_desc;
	}

	public java.util.Vector getHu_desc() {
		return hu_desc;
	}

	public st_hand_seq getHand_seq() {
		return hand_seq;
	}

	public boolean hasHand_seq() {
		return hasHand_seq;
	}

	public java.util.Vector getHu_seq() {
		return hu_seq;
	}

	public java.util.Vector getComplex_seq() {
		return complex_seq;
	}

	public int getVip_change() {
		return vip_change;
	}

	public boolean hasVip_change() {
		return hasVip_change;
	}

	public long getTotal_gold() {
		return total_gold;
	}

	public boolean hasTotal_gold() {
		return hasTotal_gold;
	}

	public long getMoney_change() {
		return money_change;
	}

	public boolean hasMoney_change() {
		return hasMoney_change;
	}

	public String toString() {
		final String TAB = "   ";
		String retValue = "";
		retValue += this.getClass().getName() + "(";
		if(hasSeat_index) retValue += "seat_index = " + this.seat_index + TAB;
		retValue += "wan_gang_mt = " + this.wan_gang_mt + TAB;
		retValue += "zhi_gang_mt = " + this.zhi_gang_mt + TAB;
		retValue += "an_gang_mt = " + this.an_gang_mt + TAB;
		retValue += "hu_mt = " + this.hu_mt + TAB;
		retValue += "hua_zhu_mt = " + this.hua_zhu_mt + TAB;
		retValue += "da_jiao_mt = " + this.da_jiao_mt + TAB;
		if(hasDa_jiao_desc) retValue += "da_jiao_desc = " + this.da_jiao_desc + TAB;
		retValue += "hu_desc = " + this.hu_desc + TAB;
		if(hasHand_seq) retValue += "hand_seq = " + this.hand_seq + TAB;
		retValue += "hu_seq = " + this.hu_seq + TAB;
		retValue += "complex_seq = " + this.complex_seq + TAB;
		if(hasVip_change) retValue += "vip_change = " + this.vip_change + TAB;
		if(hasTotal_gold) retValue += "total_gold = " + this.total_gold + TAB;
		if(hasMoney_change) retValue += "money_change = " + this.money_change + TAB;
		retValue += ")";

		return retValue;
	}

	// Override
	public int computeSize() {
		int totalSize = 0;
		if(hasSeat_index) totalSize += ComputeSizeUtil.computeIntSize(fieldNumberSeat_index, seat_index);
		totalSize += ComputeSizeUtil.computeListSize(fieldNumberHu_seq, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_INT, hu_seq);
		if(hasVip_change) totalSize += ComputeSizeUtil.computeIntSize(fieldNumberVip_change, vip_change);
		if(hasTotal_gold) totalSize += ComputeSizeUtil.computeLongSize(fieldNumberTotal_gold, total_gold);
		if(hasMoney_change) totalSize += ComputeSizeUtil.computeLongSize(fieldNumberMoney_change, money_change);
		totalSize += computeNestedMessageSize();

		return totalSize;
	}

	private int computeNestedMessageSize() {
		int messageSize = 0;
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberWan_gang_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, wan_gang_mt);
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberZhi_gang_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, zhi_gang_mt);
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberAn_gang_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, an_gang_mt);
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberHu_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, hu_mt);
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberHua_zhu_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, hua_zhu_mt);
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberDa_jiao_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, da_jiao_mt);
		if(hasDa_jiao_desc) messageSize += ComputeSizeUtil.computeMessageSize(fieldNumberDa_jiao_desc, da_jiao_desc.computeSize());
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberHu_desc, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, hu_desc);
		if(hasHand_seq) messageSize += ComputeSizeUtil.computeMessageSize(fieldNumberHand_seq, hand_seq.computeSize());
		messageSize += ComputeSizeUtil.computeListSize(fieldNumberComplex_seq, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, complex_seq);

		return messageSize;
	}

	// Override
	public void writeFields(final OutputWriter writer) throws IOException {
		if(hasSeat_index) writer.writeInt(fieldNumberSeat_index, seat_index);
		writer.writeList(fieldNumberWan_gang_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, wan_gang_mt);
		writer.writeList(fieldNumberZhi_gang_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, zhi_gang_mt);
		writer.writeList(fieldNumberAn_gang_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, an_gang_mt);
		writer.writeList(fieldNumberHu_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, hu_mt);
		writer.writeList(fieldNumberHua_zhu_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, hua_zhu_mt);
		writer.writeList(fieldNumberDa_jiao_mt, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, da_jiao_mt);
		if(hasDa_jiao_desc) { writer.writeMessage(fieldNumberDa_jiao_desc, da_jiao_desc.computeSize()); da_jiao_desc.writeFields(writer); }
		writer.writeList(fieldNumberHu_desc, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, hu_desc);
		if(hasHand_seq) { writer.writeMessage(fieldNumberHand_seq, hand_seq.computeSize()); hand_seq.writeFields(writer); }
		writer.writeList(fieldNumberHu_seq, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_INT, hu_seq);
		writer.writeList(fieldNumberComplex_seq, net.jarlehansen.protobuf.javame.SupportedDataTypes.DATA_TYPE_CUSTOM, complex_seq);
		if(hasVip_change) writer.writeInt(fieldNumberVip_change, vip_change);
		if(hasTotal_gold) writer.writeLong(fieldNumberTotal_gold, total_gold);
		if(hasMoney_change) writer.writeLong(fieldNumberMoney_change, money_change);
	}

	static all_seq_info parseFields(final InputReader reader) throws IOException {
		int nextFieldNumber = getNextFieldNumber(reader);
		final all_seq_info.Builder builder = all_seq_info.newBuilder();

		while (nextFieldNumber > 0) {
			if(!populateBuilderWithField(reader, builder, nextFieldNumber)) {
				reader.getPreviousTagDataTypeAndReadContent();
			}
			nextFieldNumber = getNextFieldNumber(reader);
		}

		return builder.build();
	}

	static int getNextFieldNumber(final InputReader reader) throws IOException {
		return reader.getNextFieldNumber();
	}

	static boolean populateBuilderWithField(final InputReader reader, final Builder builder, final int fieldNumber) throws IOException {
		boolean fieldFound = true;
		switch (fieldNumber) {
			case fieldNumberSeat_index:
				builder.setSeat_index(reader.readInt(fieldNumber));
				break;
			case fieldNumberWan_gang_mt:
			 java.util.Vector vcWan_gang_mt = reader.readMessages(fieldNumberWan_gang_mt);
				for(int i = 0 ; i < vcWan_gang_mt.size(); i++) {
					byte[] eachBinData = (byte[]) vcWan_gang_mt.elementAt(i);
					st_money_transfer.Builder builderWan_gang_mt = st_money_transfer.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolWan_gang_mt = true;
					int nestedFieldWan_gang_mt = -1;
					while(boolWan_gang_mt) {
						nestedFieldWan_gang_mt = getNextFieldNumber(innerInputReader);
						boolWan_gang_mt = st_money_transfer.populateBuilderWithField(innerInputReader, builderWan_gang_mt, nestedFieldWan_gang_mt);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementWan_gang_mt(builderWan_gang_mt.build());
				}
				break;
			case fieldNumberZhi_gang_mt:
			 java.util.Vector vcZhi_gang_mt = reader.readMessages(fieldNumberZhi_gang_mt);
				for(int i = 0 ; i < vcZhi_gang_mt.size(); i++) {
					byte[] eachBinData = (byte[]) vcZhi_gang_mt.elementAt(i);
					st_money_transfer.Builder builderZhi_gang_mt = st_money_transfer.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolZhi_gang_mt = true;
					int nestedFieldZhi_gang_mt = -1;
					while(boolZhi_gang_mt) {
						nestedFieldZhi_gang_mt = getNextFieldNumber(innerInputReader);
						boolZhi_gang_mt = st_money_transfer.populateBuilderWithField(innerInputReader, builderZhi_gang_mt, nestedFieldZhi_gang_mt);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementZhi_gang_mt(builderZhi_gang_mt.build());
				}
				break;
			case fieldNumberAn_gang_mt:
			 java.util.Vector vcAn_gang_mt = reader.readMessages(fieldNumberAn_gang_mt);
				for(int i = 0 ; i < vcAn_gang_mt.size(); i++) {
					byte[] eachBinData = (byte[]) vcAn_gang_mt.elementAt(i);
					st_money_transfer.Builder builderAn_gang_mt = st_money_transfer.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolAn_gang_mt = true;
					int nestedFieldAn_gang_mt = -1;
					while(boolAn_gang_mt) {
						nestedFieldAn_gang_mt = getNextFieldNumber(innerInputReader);
						boolAn_gang_mt = st_money_transfer.populateBuilderWithField(innerInputReader, builderAn_gang_mt, nestedFieldAn_gang_mt);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementAn_gang_mt(builderAn_gang_mt.build());
				}
				break;
			case fieldNumberHu_mt:
			 java.util.Vector vcHu_mt = reader.readMessages(fieldNumberHu_mt);
				for(int i = 0 ; i < vcHu_mt.size(); i++) {
					byte[] eachBinData = (byte[]) vcHu_mt.elementAt(i);
					st_money_transfer.Builder builderHu_mt = st_money_transfer.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolHu_mt = true;
					int nestedFieldHu_mt = -1;
					while(boolHu_mt) {
						nestedFieldHu_mt = getNextFieldNumber(innerInputReader);
						boolHu_mt = st_money_transfer.populateBuilderWithField(innerInputReader, builderHu_mt, nestedFieldHu_mt);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementHu_mt(builderHu_mt.build());
				}
				break;
			case fieldNumberHua_zhu_mt:
			 java.util.Vector vcHua_zhu_mt = reader.readMessages(fieldNumberHua_zhu_mt);
				for(int i = 0 ; i < vcHua_zhu_mt.size(); i++) {
					byte[] eachBinData = (byte[]) vcHua_zhu_mt.elementAt(i);
					st_money_transfer.Builder builderHua_zhu_mt = st_money_transfer.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolHua_zhu_mt = true;
					int nestedFieldHua_zhu_mt = -1;
					while(boolHua_zhu_mt) {
						nestedFieldHua_zhu_mt = getNextFieldNumber(innerInputReader);
						boolHua_zhu_mt = st_money_transfer.populateBuilderWithField(innerInputReader, builderHua_zhu_mt, nestedFieldHua_zhu_mt);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementHua_zhu_mt(builderHua_zhu_mt.build());
				}
				break;
			case fieldNumberDa_jiao_mt:
			 java.util.Vector vcDa_jiao_mt = reader.readMessages(fieldNumberDa_jiao_mt);
				for(int i = 0 ; i < vcDa_jiao_mt.size(); i++) {
					byte[] eachBinData = (byte[]) vcDa_jiao_mt.elementAt(i);
					st_money_transfer.Builder builderDa_jiao_mt = st_money_transfer.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolDa_jiao_mt = true;
					int nestedFieldDa_jiao_mt = -1;
					while(boolDa_jiao_mt) {
						nestedFieldDa_jiao_mt = getNextFieldNumber(innerInputReader);
						boolDa_jiao_mt = st_money_transfer.populateBuilderWithField(innerInputReader, builderDa_jiao_mt, nestedFieldDa_jiao_mt);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementDa_jiao_mt(builderDa_jiao_mt.build());
				}
				break;
			case fieldNumberDa_jiao_desc:
			 java.util.Vector vcDa_jiao_desc = reader.readMessages(fieldNumberDa_jiao_desc);
				for(int i = 0 ; i < vcDa_jiao_desc.size(); i++) {
					byte[] eachBinData = (byte[]) vcDa_jiao_desc.elementAt(i);
					st_hu_desc.Builder builderDa_jiao_desc = st_hu_desc.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolDa_jiao_desc = true;
					int nestedFieldDa_jiao_desc = -1;
					while(boolDa_jiao_desc) {
						nestedFieldDa_jiao_desc = getNextFieldNumber(innerInputReader);
						boolDa_jiao_desc = st_hu_desc.populateBuilderWithField(innerInputReader, builderDa_jiao_desc, nestedFieldDa_jiao_desc);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.setDa_jiao_desc(builderDa_jiao_desc.build());
				}
				break;
			case fieldNumberHu_desc:
			 java.util.Vector vcHu_desc = reader.readMessages(fieldNumberHu_desc);
				for(int i = 0 ; i < vcHu_desc.size(); i++) {
					byte[] eachBinData = (byte[]) vcHu_desc.elementAt(i);
					st_hu_desc.Builder builderHu_desc = st_hu_desc.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolHu_desc = true;
					int nestedFieldHu_desc = -1;
					while(boolHu_desc) {
						nestedFieldHu_desc = getNextFieldNumber(innerInputReader);
						boolHu_desc = st_hu_desc.populateBuilderWithField(innerInputReader, builderHu_desc, nestedFieldHu_desc);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementHu_desc(builderHu_desc.build());
				}
				break;
			case fieldNumberHand_seq:
			 java.util.Vector vcHand_seq = reader.readMessages(fieldNumberHand_seq);
				for(int i = 0 ; i < vcHand_seq.size(); i++) {
					byte[] eachBinData = (byte[]) vcHand_seq.elementAt(i);
					st_hand_seq.Builder builderHand_seq = st_hand_seq.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolHand_seq = true;
					int nestedFieldHand_seq = -1;
					while(boolHand_seq) {
						nestedFieldHand_seq = getNextFieldNumber(innerInputReader);
						boolHand_seq = st_hand_seq.populateBuilderWithField(innerInputReader, builderHand_seq, nestedFieldHand_seq);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.setHand_seq(builderHand_seq.build());
				}
				break;
			case fieldNumberHu_seq:
				builder.addElementHu_seq(reader.readInt(fieldNumber));
				break;
			case fieldNumberComplex_seq:
			 java.util.Vector vcComplex_seq = reader.readMessages(fieldNumberComplex_seq);
				for(int i = 0 ; i < vcComplex_seq.size(); i++) {
					byte[] eachBinData = (byte[]) vcComplex_seq.elementAt(i);
					sccomplex_tile.Builder builderComplex_seq = sccomplex_tile.newBuilder();
					InputReader innerInputReader = new InputReader(eachBinData, unknownTagHandler);
					boolean boolComplex_seq = true;
					int nestedFieldComplex_seq = -1;
					while(boolComplex_seq) {
						nestedFieldComplex_seq = getNextFieldNumber(innerInputReader);
						boolComplex_seq = sccomplex_tile.populateBuilderWithField(innerInputReader, builderComplex_seq, nestedFieldComplex_seq);
					}
					eachBinData = null;
					innerInputReader = null;
					builder.addElementComplex_seq(builderComplex_seq.build());
				}
				break;
			case fieldNumberVip_change:
				builder.setVip_change(reader.readInt(fieldNumber));
				break;
			case fieldNumberTotal_gold:
				builder.setTotal_gold(reader.readLong(fieldNumber));
				break;
			case fieldNumberMoney_change:
				builder.setMoney_change(reader.readLong(fieldNumber));
				break;
		default:
			fieldFound = false;
		}
		return fieldFound;
	}

	public static void setUnknownTagHandler(final UnknownTagHandler unknownTagHandler) {
		all_seq_info.unknownTagHandler = unknownTagHandler;
	}

	public static all_seq_info parseFrom(final byte[] data) throws IOException {
		return parseFields(new InputReader(data, unknownTagHandler));
	}

	public static all_seq_info parseFrom(final InputStream inputStream) throws IOException {
		return parseFields(new InputReader(inputStream, unknownTagHandler));
	}

	public static all_seq_info parseDelimitedFrom(final InputStream inputStream) throws IOException {
		final int limit = DelimitedSizeUtil.readDelimitedSize(inputStream);
		return parseFields(new InputReader(new DelimitedInputStream(inputStream, limit), unknownTagHandler));
	}
}